{"version":3,"sources":["context/auth/authContext.js","context/alert/alertContext.js","components/forms/Form.js","components/alert/Alert.js","components/auth/Auth.js","reducers/authorizationReducer.js","pages/Home.js","context/todoListContext.js","reducers/todoListReducer.js","components/popupForm/PopupForm.js","components/Loader.js","components/CheckBox.js","pages/TodoList.js","pages/Manual.js","components/navbar/Navbar.js","context/alert/alertReducer.js","context/alert/alertState.js","App.js","serviceWorker.js","index.js","pages/todolist.module.css","components/navbar/Navbar.module.css","components/popupForm/PopupForm.module.css","components/auth/Auth.module.css","components/forms/form.module.css","components/alert/Alert.module.css","pages/Home.module.css","pages/manual.module.css"],"names":["AuthContext","createContext","AlertContext","React","Form","name","useContext","state","dispatch","registrationForm","login","password1","password2","email","authorizationForm","loginAuth","passwordAuth","password","showAlert","hideAlert","className","classes","wrapForm","onSubmit","event","preventDefault","area","signUp","style","height","TextField","label","variant","autoComplete","size","onChange","type","value","target","fieldName","draft","Button","color","onClick","TodoAlert","alert","cls","wrapAlert","Alert","action","severity","text","Auth","props","useEffect","history","push","sessionStorage","setItem","JSON","stringify","Container","maxWidth","authContainer","Typography","component","wrapButtons","btnSignUp","alertVisible","isRegistration","authorizationReducer","field","stateCopy","isValid","Home","TodoListContext","url","todoListReducer","tasks","selectedTask","count","newTaskDraft","formChangeTask","formMakeList","disabled","formNewTask","payload","i","length","isdone","todoCount","filter","task","id","number","index","loading","PopupForm","placeholder","styleTextField","container","wrap","fullWidth","join","btn","a","async","date","Date","toJSON","checked","axios","post","res","status","Error","data","message","newTask","put","saveChangeTask","left","useStyles","makeStyles","theme","root","position","top","marginLeft","spacing","Loader","CircularProgress","CheckBox","Checkbox","cursor","TodoList","useReducer","hideLoader","get","Object","keys","map","key","setTimeout","fetchTasks","Provider","results","done","Math","random","onFocus","taskDone","onClickTaskDone","taskNotDone","onClickTaskNotDone","delete","Manual","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","Navbar","useTheme","useState","open","setOpen","CssBaseline","AppBar","clsx","Toolbar","IconButton","aria-label","edge","noWrap","Drawer","anchor","paper","direction","Divider","List","ListItem","button","link","exact","to","activeClassName","active","alertReducer","AlertState","children","App","parse","getItem","StylesProvider","injectFirst","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.b7f564db.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nexport const AuthContext = createContext();","import React from \"react\";\r\n\r\nexport const AlertContext = React.createContext();\r\n","import React, { useContext } from \"react\";\r\nimport classes from \"./form.module.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { AuthContext } from \"../../context/auth/authContext\";\r\nimport { AlertContext } from \"../../context/alert/alertContext\";\r\n\r\nconst Form = ({ name }) => {\r\n  const { state, dispatch } = useContext(AuthContext);\r\n  let { login, password1, password2, email } = state.registrationForm;\r\n  let { login: loginAuth, password: passwordAuth } = state.authorizationForm;\r\n\r\n  const { showAlert, hideAlert } = useContext(AlertContext);\r\n\r\n  const saveDataRegistrationForm = () => {\r\n    if (!login.draft || !password1.draft || !password2.draft || !email.draft) {\r\n      showAlert(\"Fill in all fields!\", \"error\");\r\n    } else if (password1.draft !== password2.draft) {\r\n      showAlert(\"Password not confirm!\", \"error\");\r\n    } else {\r\n      showAlert(\"Registration came succes!\", \"success\");\r\n      dispatch({ type: \"SAVE_DATA_REGISTRATION_FORM\" });\r\n    }\r\n  };\r\n\r\n  const signIn = () => {\r\n    if (!loginAuth.draft || !passwordAuth.draft) {\r\n      showAlert(\"Fill in all fields!\", \"error\");\r\n    } else if (\r\n      loginAuth.draft &&\r\n      passwordAuth.draft &&\r\n      login.value !== loginAuth.draft\r\n    ) {\r\n      showAlert(\"Invalid login!\", \"error\");\r\n    } else if (\r\n      loginAuth.draft &&\r\n      passwordAuth.draft &&\r\n      password2.value !== passwordAuth.draft\r\n    ) {\r\n      showAlert(\"Invalid password!\", \"error\");\r\n    } else if (\r\n      loginAuth.draft &&\r\n      passwordAuth.draft &&\r\n      (login.value === loginAuth.draft ||\r\n        password2.value === passwordAuth.draft)\r\n    ) {\r\n      hideAlert();\r\n      dispatch({ type: \"SIGN_IN\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.wrapForm}>\r\n      <form onSubmit={event => event.preventDefault()}>\r\n        <fieldset className={classes.area}>\r\n          <legend>{name === \"Sign up\" ? \"SIGN UP\" : \"LOG IN\"}</legend>\r\n          <div\r\n            className={classes.signUp}\r\n            style={name === \"Sign up\" ? { height: \"65vh\" } : { height: \"42vh\" }}\r\n          >\r\n            {name === \"Sign up\" ? (\r\n              <>\r\n                <TextField\r\n                  label=\"Enter login\"\r\n                  variant=\"outlined\"\r\n                  autoComplete=\"username\"\r\n                  size=\"small\"\r\n                  onChange={event =>\r\n                    dispatch({\r\n                      type: \"ON_DRAFTS_REGISTRATION_FORM_CHANGE\",\r\n                      value: event.target.value,\r\n                      fieldName: \"login\"\r\n                    })\r\n                  }\r\n                  value={login.draft}\r\n                />\r\n                <TextField\r\n                  label=\"Enter password\"\r\n                  type=\"password\"\r\n                  autoComplete=\"new-password\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onChange={event =>\r\n                    dispatch({\r\n                      type: \"ON_DRAFTS_REGISTRATION_FORM_CHANGE\",\r\n                      value: event.target.value,\r\n                      fieldName: \"password1\"\r\n                    })\r\n                  }\r\n                  value={password1.draft}\r\n                />\r\n                <TextField\r\n                  label=\"Enter password again\"\r\n                  type=\"password\"\r\n                  autoComplete=\"new-password\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onChange={event =>\r\n                    dispatch({\r\n                      type: \"ON_DRAFTS_REGISTRATION_FORM_CHANGE\",\r\n                      value: event.target.value,\r\n                      fieldName: \"password2\"\r\n                    })\r\n                  }\r\n                  value={password2.draft}\r\n                />\r\n                <TextField\r\n                  label=\"Enter email\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onChange={event =>\r\n                    dispatch({\r\n                      type: \"ON_DRAFTS_REGISTRATION_FORM_CHANGE\",\r\n                      value: event.target.value,\r\n                      fieldName: \"email\"\r\n                    })\r\n                  }\r\n                  value={email.draft}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <TextField\r\n                  label=\"Enter login\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onChange={event =>\r\n                    dispatch({\r\n                      type: \"ON_DRAFTS_AUTHORIZATION_FORM_CHANGE\",\r\n                      value: event.target.value,\r\n                      fieldName: \"login\"\r\n                    })\r\n                  }\r\n                  value={loginAuth.draft}\r\n                />\r\n                <TextField\r\n                  label=\"Enter password\"\r\n                  type=\"password\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onChange={event =>\r\n                    dispatch({\r\n                      type: \"ON_DRAFTS_AUTHORIZATION_FORM_CHANGE\",\r\n                      value: event.target.value,\r\n                      fieldName: \"password\"\r\n                    })\r\n                  }\r\n                  value={passwordAuth.draft}\r\n                />\r\n              </>\r\n            )}\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onClick={name === \"Sign up\" ? saveDataRegistrationForm : signIn}\r\n            >\r\n              {name === \"Sign up\" ? \"SAVE\" : \"SIGN IN\"}\r\n            </Button>\r\n          </div>\r\n        </fieldset>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, {useContext} from 'react';\r\nimport {Alert} from '@material-ui/lab';\r\nimport Button from '@material-ui/core/Button';\r\nimport cls from './Alert.module.css';\r\nimport {AlertContext} from '../../context/alert/alertContext';\r\n\r\nexport const TodoAlert = () => {\r\n  const {alert,hideAlert } = useContext(AlertContext);\r\n  \r\n   return (\r\n    <div className={cls.wrapAlert}>\r\n      <Alert \r\n        action={\r\n          <Button\r\n          color=\"inherit\"\r\n          size=\"small\"\r\n          onClick={hideAlert}\r\n          >\r\n            UNDO\r\n          </Button>\r\n        }\r\n        variant=\"filled\"\r\n        severity={alert.severity}\r\n      >\r\n        {alert.text}\r\n      </Alert>      \r\n    </div>\r\n  );\r\n}\r\n\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport classes from \"./Auth.module.css\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Form from \"../forms/Form\";\r\nimport { AuthContext } from \"../../context/auth/authContext\";\r\nimport { AlertContext } from \"../../context/alert/alertContext\";\r\nimport { TodoAlert } from \"../alert/Alert\";\r\n\r\nconst Auth = (props) => {\r\n  const { state, dispatch } = useContext(AuthContext);\r\n  const { alert } = useContext(AlertContext);\r\n\r\n  const goToAuth = () => {\r\n    props.history.push(\"/todolist-material_ui/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    goToAuth();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    sessionStorage.setItem(\r\n      \"registrationForm\",\r\n      JSON.stringify(state.registrationForm)\r\n    );\r\n  }, [state.registrationForm]);\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" className={classes.authContainer}>\r\n      <Typography component=\"div\" style={{ height: \"100vh\" }}>\r\n        <div className={classes.wrapButtons}>\r\n          <Button\r\n            className={classes.btnSignUp}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={() => dispatch({ type: \"SIGN_UP\" })}\r\n          >\r\n            SIGN UP\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={() => dispatch({ type: \"LOG_IN\" })}\r\n          >\r\n            LOG IN\r\n          </Button>\r\n        </div>\r\n        {alert.alertVisible ? <TodoAlert /> : null}\r\n        {state.isRegistration ? (\r\n          <Form name=\"Log in\" />\r\n        ) : (\r\n          <Form name=\"Sign up\" />\r\n        )}\r\n      </Typography>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","const authorizationReducer = (state, action) => {\r\n  let { login, password1, password2, email } = state.registrationForm;\r\n  let { fieldName: field } = action;\r\n  let stateCopy = { ...state };\r\n\r\n  switch (action.type) {\r\n    case \"LOG_IN\":\r\n      return {\r\n        ...state,\r\n        isRegistration: true,\r\n      };\r\n    case \"SIGN_UP\":\r\n      return {\r\n        ...state,\r\n        isRegistration: false,\r\n      };\r\n    case \"ON_DRAFTS_REGISTRATION_FORM_CHANGE\":\r\n      stateCopy.registrationForm = { ...state.registrationForm };\r\n      stateCopy.registrationForm[field] = {\r\n        ...state.registrationForm[field],\r\n        draft: action.value,\r\n      };\r\n      return stateCopy;\r\n    case \"SAVE_DATA_REGISTRATION_FORM\":\r\n      stateCopy.isRegistration = true;\r\n      stateCopy.registrationForm = { ...state.registrationForm };\r\n      stateCopy.registrationForm.login = {\r\n        ...state.registrationForm.login,\r\n        value: login.draft,\r\n        draft: \"\",\r\n      };\r\n      stateCopy.registrationForm.password1 = {\r\n        ...state.registrationForm.password1,\r\n        value: password1.draft,\r\n        draft: \"\",\r\n      };\r\n      stateCopy.registrationForm.password2 = {\r\n        ...state.registrationForm.password2,\r\n        value: password2.draft,\r\n        draft: \"\",\r\n      };\r\n      stateCopy.registrationForm.email = {\r\n        ...state.registrationForm.email,\r\n        value: email.draft,\r\n        draft: \"\",\r\n      };\r\n      return stateCopy;\r\n    case \"ON_DRAFTS_AUTHORIZATION_FORM_CHANGE\":\r\n      stateCopy.authorizationForm = { ...state.authorizationForm };\r\n      stateCopy.authorizationForm[field] = {\r\n        ...state.authorizationForm[field],\r\n        draft: action.value,\r\n      };\r\n      return stateCopy;\r\n    case \"SIGN_IN\":\r\n      return {\r\n        ...state,\r\n        isValid: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authorizationReducer;\r\n","import React from \"react\";\r\nimport cls from \"./Home.module.css\";\r\n\r\nexport const Home = () => {\r\n  return (\r\n    <div className={cls.text}>\r\n      <p>\r\n        Когда человек сознательно или интуитивно выбирает себе в жизни какую-то\r\n        цель, жизненную задачу, он невольно дает себе оценку. По тому, ради чего\r\n        человек живет, можно судить и о его самооценке - низкой или высокой.\r\n        Если человек живет, чтобы приносить людям добро, облегчать их страдания,\r\n        давать людям радость, то он оценивает себя на уровне этой своей\r\n        человечности. Он ставит себе цель, достойную человека. Только такая цель\r\n        позволяет человеку прожить свою жизнь с достоинством и получить\r\n        настоящую радость. Да, радость! Подумайте: если человек ставит себе\r\n        задачей увеличивать в жизни добро, приносить людям счастье, какие\r\n        неудачи могут его постигнуть?{\" \"}\r\n      </p>\r\n      <p>\r\n        Не тому помочь? Но много ли людей не нуждаются в помощи? Если жить\r\n        только для себя, своими мелкими заботами о собственном благополучии, то\r\n        от прожитого не останется и следа. Если же жить для других, то другие\r\n        сберегут то, чему служил, чему отдавал силы. Можно по-разному определять\r\n        цель своего существования, но цель должна быть.\r\n      </p>\r\n      <p>\r\n        Надо иметь и принципы в жизни. Одно правило в жизни должно быть у\r\n        каждого человека, в его цели жизни, в его принципах жизни, в его\r\n        поведении: надо прожить жизнь с достоинством, чтобы не стыдно было\r\n        вспоминать. Достоинство требует доброты, великодушия, умения не быть\r\n        эгоистом, быть правдивым, хорошим другом, находить радость в помощи\r\n        другим.\r\n      </p>\r\n      <p>\r\n        Надо иметь и принципы в жизни. Одно правило в жизни должно быть у\r\n        каждого человека, в его цели жизни, в его принципах жизни, в его\r\n        поведении: надо прожить жизнь с достоинством, чтобы не стыдно было\r\n        вспоминать. Достоинство требует доброты, великодушия, умения не быть\r\n        эгоистом, быть правдивым, хорошим другом, находить радость в помощи\r\n        другим.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import {createContext} from 'react';\r\n\r\nexport const TodoListContext = createContext();","export const NEW_TASK_DRAFT_HANDLER = \"NEW_TASK_DRAFT_HANDLER\";\r\nexport const ON_CLICK_TASK_CHANGE = \"ON_CLICK_TASK_CHANGE\";\r\nexport const ON_CHANGE_DRAFT = \"ON_CHANGE_DRAFT\";\r\nexport const HANDLE_POPUP_FORM = \"HANDLE_POPUP_FORM\";\r\nexport const ON_CLICK_TASK_DONE = \"ON_CLICK_TASK_DONE\";\r\nexport const ON_CLICK_TASK_NOT_DONE = \"ON_CLICK_TASK_NOT_DONE\";\r\nexport const SAVE_NEW_TASK = \"SAVE_NEW_TASK\";\r\nexport const SAVE_CHANGE_TASK = \"SAVE_CHANGE_TASK\";\r\nexport const CANCEL_NEW_TASK = \"CANCEL_NEW_TASK\";\r\nexport const CANCEL_CHANGE_TASK = \"CANCEL_CHANGE_TASK\";\r\nexport const HANDLE_TASK_SELECT = \"HANDLE_TASK_SELECT\";\r\nexport const ON_CLICK_TASK_DELETE = \"ON_CLICK_TASK_DELETE\";\r\nexport const SHOW_ALERT_TODO = \"SHOW_ALERT_TODO\";\r\nexport const HIDE_ALERT_TODO = \"HIDE_ALERT_TODO\";\r\nexport const SHOW_LOADER = \"SHOW_LOADER\";\r\nexport const HIDE_LOADER = \"HIDE_LOADER\";\r\nexport const FETCH_TASKS = \"FETCH_TASKS\";\r\nexport const url = \"https://todolist-hooks-988d8.firebaseio.com\";\r\n\r\nconst todoListReducer = (state, action) => {\r\n  let { tasks, selectedTask } = state;\r\n  let stateCopy = { ...state };\r\n  let count = 0;\r\n\r\n  switch (action.type) {\r\n    case NEW_TASK_DRAFT_HANDLER:\r\n      return { ...state, newTaskDraft: action.value };\r\n    case ON_CLICK_TASK_CHANGE:\r\n      stateCopy.formChangeTask = true;\r\n      stateCopy.formMakeList = false;\r\n      stateCopy.tasks = [...state.tasks];\r\n      stateCopy.tasks[selectedTask] = {\r\n        ...state.tasks[selectedTask],\r\n        draft: tasks[selectedTask].text,\r\n        disabled: true,\r\n      };\r\n      return stateCopy;\r\n    case ON_CHANGE_DRAFT:\r\n      stateCopy.tasks = [...state.tasks];\r\n      stateCopy.tasks[selectedTask] = {\r\n        ...state.tasks[selectedTask],\r\n        draft: action.value,\r\n      };\r\n      return stateCopy;\r\n    case HANDLE_POPUP_FORM:\r\n      stateCopy.formNewTask = true;\r\n      stateCopy.formMakeList = false;\r\n      return stateCopy;\r\n    case ON_CLICK_TASK_DONE:\r\n      stateCopy.tasks = [...state.tasks];\r\n      stateCopy.tasks[selectedTask] = action.payload;\r\n      for (let i = 0; i < stateCopy.tasks.length; i++) {\r\n        if (stateCopy.tasks[i].isdone) count++;\r\n      }\r\n      stateCopy.todoCount = count;\r\n      return stateCopy;\r\n    case ON_CLICK_TASK_NOT_DONE:\r\n      stateCopy.tasks = [...state.tasks];\r\n      stateCopy.tasks[selectedTask] = action.payload;\r\n      for (let i = 0; i < stateCopy.tasks.length; i++) {\r\n        if (stateCopy.tasks[i].isdone) count++;\r\n      }\r\n      stateCopy.todoCount = count;\r\n      return stateCopy;\r\n    case ON_CLICK_TASK_DELETE:\r\n      stateCopy.tasks = [\r\n        ...state.tasks.filter((task) => task.id !== action.payload),\r\n      ];\r\n      for (let i = 0; i < stateCopy.tasks.length; i++) {\r\n        if (stateCopy.tasks[i].isdone) count++;\r\n      }\r\n      stateCopy.todoCount = count;\r\n      return stateCopy;\r\n    case SAVE_NEW_TASK:\r\n      stateCopy.tasks = [...state.tasks, action.payload];\r\n      stateCopy.newTaskDraft = \"\";\r\n      stateCopy.formNewTask = false;\r\n      stateCopy.formMakeList = true;\r\n      return stateCopy;\r\n    case SAVE_CHANGE_TASK:\r\n      stateCopy.formChangeTask = false;\r\n      stateCopy.formMakeList = true;\r\n      stateCopy.tasks = [...state.tasks];\r\n      stateCopy.tasks[selectedTask] = action.payload;\r\n      return stateCopy;\r\n    case CANCEL_NEW_TASK:\r\n      stateCopy.newTaskDraft = \"\";\r\n      stateCopy.formNewTask = false;\r\n      stateCopy.formMakeList = true;\r\n      return stateCopy;\r\n    case CANCEL_CHANGE_TASK:\r\n      stateCopy.formChangeTask = false;\r\n      stateCopy.formMakeList = true;\r\n      stateCopy.tasks = [...state.tasks];\r\n      stateCopy.tasks[selectedTask] = {\r\n        ...state.tasks[selectedTask],\r\n        disabled: false,\r\n        number: null,\r\n      };\r\n      return stateCopy;\r\n    case HANDLE_TASK_SELECT:\r\n      stateCopy.selectedTask = action.index;\r\n      stateCopy.tasks = [...state.tasks];\r\n      stateCopy.tasks[action.index] = {\r\n        ...state.tasks[action.index],\r\n        number: action.index,\r\n      };\r\n      return stateCopy;\r\n    case SHOW_LOADER:\r\n      return { ...state, loading: true };\r\n    case HIDE_LOADER:\r\n      return { ...state, loading: false };\r\n    case FETCH_TASKS:\r\n      stateCopy.tasks = action.payload;\r\n      for (let i = 0; i < stateCopy.tasks.length; i++) {\r\n        if (stateCopy.tasks[i].isdone) count++;\r\n      }\r\n      stateCopy.todoCount = count;\r\n      return stateCopy;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todoListReducer;\r\n","import React, { useContext } from \"react\";\r\nimport cls from \"./PopupForm.module.css\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { TodoListContext } from \"../../context/todoListContext\";\r\nimport { AlertContext } from \"../../context/alert/alertContext\";\r\nimport {\r\n  CANCEL_NEW_TASK,\r\n  ON_CHANGE_DRAFT,\r\n  NEW_TASK_DRAFT_HANDLER,\r\n  SAVE_CHANGE_TASK,\r\n  SAVE_NEW_TASK,\r\n  CANCEL_CHANGE_TASK,\r\n  url,\r\n} from \"../../reducers/todoListReducer\";\r\nimport { TodoAlert } from \"../alert/Alert\";\r\nimport axios from \"axios\";\r\n\r\nexport const PopupForm = ({ name, placeholder }) => {\r\n  const { state, dispatch } = useContext(TodoListContext);\r\n  const { alert, showAlert, hideAlert } = useContext(AlertContext);\r\n  const styleTextField = [];\r\n  let { tasks, newTaskDraft, formNewTask, selectedTask } = state;\r\n\r\n  const saveNewTask = async () => {\r\n    try {\r\n      if (newTaskDraft) {\r\n        hideAlert();\r\n        const task = {\r\n          text: newTaskDraft,\r\n          draft: \"\",\r\n          disabled: false,\r\n          isdone: false,\r\n          number: null,\r\n          date: new Date().toJSON(),\r\n          checked: false,\r\n        };\r\n        const res = await axios.post(`${url}/tasks.json`, task);\r\n        if (res.status >= 400) {\r\n          throw new Error(\"Something went wrong!\");\r\n        }\r\n        const payload = {\r\n          ...task,\r\n          id: res.data.name,\r\n        };\r\n        dispatch({ type: SAVE_NEW_TASK, payload });\r\n      } else {\r\n        showAlert(\"This field don't should to be empty!\", \"error\");\r\n      }\r\n    } catch (e) {\r\n      showAlert(`httpError: ${e.message}`, \"error\");\r\n    }\r\n  };\r\n\r\n  const saveChangeTask = async (id) => {\r\n    try {\r\n      if (state.tasks[selectedTask].draft) {\r\n        const newTask = {\r\n          ...state.tasks[selectedTask],\r\n          text: state.tasks[selectedTask].draft,\r\n          draft: \"\",\r\n          disabled: false,\r\n          number: null,\r\n        };\r\n        const res = await axios.put(`${url}/tasks/${id}.json`, newTask);\r\n        if (res.status >= 400) {\r\n          throw new Error(\"Something went wrong!\");\r\n        }\r\n        dispatch({ type: SAVE_CHANGE_TASK, payload: newTask });\r\n      } else {\r\n        showAlert(\"This field don't should to be empty!\", \"error\");\r\n      }\r\n    } catch (e) {\r\n      showAlert(`httpError: ${e.message}`, \"error\");\r\n    }\r\n  };\r\n\r\n  const cancelNewTask = () => {\r\n    hideAlert();\r\n    dispatch({ type: CANCEL_NEW_TASK });\r\n  };\r\n\r\n  const cancelChangeTask = () => {\r\n    hideAlert();\r\n    dispatch({ type: CANCEL_CHANGE_TASK });\r\n  };\r\n\r\n  if (tasks && !formNewTask) {\r\n    if (tasks[selectedTask].text === tasks[selectedTask].draft) {\r\n      styleTextField.push(cls.color);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" className={cls.container}>\r\n      {alert.alertVisible ? <TodoAlert /> : null}\r\n      <Container maxWidth=\"sm\">\r\n        <form onSubmit={(event) => event.preventDefault()}>\r\n          <fieldset className={cls.wrap}>\r\n            <legend>{name === \"Add task\" ? \"ADD TASK\" : \"CHANGE TASK\"}</legend>\r\n            <TextField\r\n              id=\"outlined-full-width\"\r\n              placeholder={placeholder}\r\n              fullWidth\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              className={styleTextField.join()}\r\n              onChange={\r\n                formNewTask\r\n                  ? (event) =>\r\n                      dispatch({\r\n                        type: NEW_TASK_DRAFT_HANDLER,\r\n                        value: event.target.value,\r\n                      })\r\n                  : (event) =>\r\n                      dispatch({\r\n                        type: ON_CHANGE_DRAFT,\r\n                        value: event.target.value,\r\n                      })\r\n              }\r\n              value={formNewTask ? newTaskDraft : tasks[selectedTask].draft}\r\n            />\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              className={cls.btn}\r\n              onClick={\r\n                formNewTask\r\n                  ? saveNewTask\r\n                  : () => saveChangeTask(state.tasks[selectedTask].id)\r\n              }\r\n            >\r\n              SAVE\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              style={{ left: \"100px\" }}\r\n              className={cls.btn}\r\n              onClick={formNewTask ? cancelNewTask : cancelChangeTask}\r\n            >\r\n              CANCEL\r\n            </Button>\r\n          </fieldset>\r\n        </form>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"fixed\",\r\n    left: \"47%\",\r\n    top: \"18%\",\r\n    \"& > * + *\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst Loader = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nexport const CheckBox = ({checked}) => {\r\n  return (\r\n   <Checkbox \r\n   checked={checked}\r\n   style={{cursor: 'default'}} />\r\n  );\r\n}","import React, { useReducer, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport cls from \"./todolist.module.css\";\r\nimport { TodoListContext } from \"../context/todoListContext\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { PopupForm } from \"../components/popupForm/PopupForm\";\r\nimport Loader from \"../components/Loader\";\r\nimport { TodoAlert } from \"../components/alert/Alert\";\r\nimport todoListReducer, {\r\n  HANDLE_TASK_SELECT,\r\n  ON_CLICK_TASK_NOT_DONE,\r\n  HANDLE_POPUP_FORM,\r\n  ON_CLICK_TASK_DELETE,\r\n  ON_CLICK_TASK_DONE,\r\n  ON_CLICK_TASK_CHANGE,\r\n  SHOW_LOADER,\r\n  FETCH_TASKS,\r\n  url,\r\n  HIDE_LOADER,\r\n} from \"../reducers/todoListReducer\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { AlertContext } from \"../context/alert/alertContext\";\r\nimport { CheckBox } from \"../components/CheckBox\";\r\n\r\nexport const TodoList = () => {\r\n  const [state, dispatch] = useReducer(todoListReducer, {\r\n    tasks: [],\r\n    newTaskDraft: \"\",\r\n    formMakeList: true,\r\n    formNewTask: false,\r\n    formChangeTask: false,\r\n    selectedTask: null,\r\n    todoCount: 0,\r\n    loading: false,\r\n  });\r\n\r\n  const { showAlert, alert } = useContext(AlertContext);\r\n\r\n  const showLoader = () => {\r\n    dispatch({ type: SHOW_LOADER });\r\n  };\r\n\r\n  const hideLoader = () => {\r\n    dispatch({ type: HIDE_LOADER });\r\n  };\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      showLoader();\r\n      const res = await axios.get(`${url}/tasks.json`);\r\n      if (res.status >= 400) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n      if (res.data) {\r\n        const payload = Object.keys(res.data).map((key) => {\r\n          return {\r\n            ...res.data[key],\r\n            id: key,\r\n          };\r\n        });\r\n        dispatch({ type: FETCH_TASKS, payload });\r\n        hideLoader();\r\n      } else {\r\n        setTimeout(hideLoader, 1500);\r\n        setTimeout(() => {\r\n          showAlert(\"The database is empty - create a task!\", \"error\");\r\n        }, 1500);\r\n      }\r\n    } catch (e) {\r\n      showAlert(`httpError: ${e.message}`, \"error\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  let {\r\n    tasks,\r\n    formMakeList,\r\n    formNewTask,\r\n    formChangeTask,\r\n    selectedTask,\r\n    todoCount,\r\n    loading,\r\n  } = state;\r\n\r\n  const onClickTaskChange = () => {\r\n    if (tasks && selectedTask !== null && tasks[selectedTask].number !== null) {\r\n      dispatch({ type: ON_CLICK_TASK_CHANGE });\r\n    }\r\n  };\r\n\r\n  const onClickTaskDone = async (id) => {\r\n    try {\r\n      if (\r\n        tasks.length &&\r\n        selectedTask !== null &&\r\n        tasks[selectedTask].number !== null\r\n      ) {\r\n        const taskDone = {\r\n          ...state.tasks[selectedTask],\r\n          isdone: true,\r\n          checked: true,\r\n          disabled: true,\r\n          number: null,\r\n        };\r\n        const response = await axios.put(`${url}/tasks/${id}.json`, taskDone);\r\n        if (response.status >= 400) {\r\n          throw new Error(\"Something went wrong!\");\r\n        }\r\n        dispatch({\r\n          type: ON_CLICK_TASK_DONE,\r\n          payload: taskDone,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      showAlert(`httpError: ${e.message}`, \"error\");\r\n    }\r\n  };\r\n\r\n  const onClickTaskNotDone = async (id) => {\r\n    try {\r\n      if (\r\n        tasks.length &&\r\n        selectedTask !== null &&\r\n        tasks[selectedTask].number !== null\r\n      ) {\r\n        const taskNotDone = {\r\n          ...state.tasks[selectedTask],\r\n          isdone: false,\r\n          checked: false,\r\n          disabled: false,\r\n          number: null,\r\n        };\r\n        const response = await axios.put(\r\n          `${url}/tasks/${id}.json`,\r\n          taskNotDone\r\n        );\r\n        if (response.status >= 400) {\r\n          throw new Error(\"Something went wrong!\");\r\n        }\r\n        dispatch({\r\n          type: ON_CLICK_TASK_NOT_DONE,\r\n          payload: taskNotDone,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      showAlert(`httpError: ${e.message}`, \"error\");\r\n    }\r\n  };\r\n\r\n  const onClickTaskDelete = async (id) => {\r\n    try {\r\n      if (\r\n        tasks.length &&\r\n        selectedTask !== null &&\r\n        tasks[selectedTask].number !== null\r\n      ) {\r\n        const response = await axios.delete(`${url}/tasks/${id}.json`);\r\n        if (response.status >= 400) {\r\n          throw new Error(\"Something went wrong!\");\r\n        }\r\n        dispatch({ type: ON_CLICK_TASK_DELETE, payload: id });\r\n      }\r\n    } catch (e) {\r\n      showAlert(`httpError: ${e.message}`, \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TodoListContext.Provider value={{ state, dispatch }}>\r\n        {alert.alertVisible ? <TodoAlert /> : null}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : formMakeList ? (\r\n          <Container maxWidth=\"xl\" className={cls.container}>\r\n            <Container maxWidth=\"sm\">\r\n              <form>\r\n                <fieldset className={cls.wrap}>\r\n                  <legend>MAKE A LIST</legend>\r\n                  <div className={cls.results}>\r\n                    <span>Total tasks {tasks.length}</span>\r\n                    <span>Done {todoCount}</span>\r\n                  </div>\r\n                  {tasks.map((task, index) => {\r\n                    const styleTextField = [cls.field];\r\n\r\n                    if (task.isdone) {\r\n                      styleTextField.push(cls.done);\r\n                    }\r\n\r\n                    return (\r\n                      <div key={index + Math.random()}>\r\n                        <CheckBox checked={task.checked} />\r\n                        <TextField\r\n                          id=\"outlined-full-width\"\r\n                          fullWidth\r\n                          label={task.date}\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          className={styleTextField.join(\" \")}\r\n                          value={task.text}\r\n                          onFocus={() =>\r\n                            dispatch({ type: HANDLE_TASK_SELECT, index })\r\n                          }\r\n                          isdone={task.isdone ? 1 : 0}\r\n                          number={task.number}\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })}\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    className={cls.btn}\r\n                    onClick={() => dispatch({ type: HANDLE_POPUP_FORM })}\r\n                  >\r\n                    A&nbsp;D&nbsp;D\r\n                  </Button>\r\n                  {tasks.length ? (\r\n                    <>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        className={cls.btn}\r\n                        disabled={\r\n                          tasks[selectedTask]\r\n                            ? tasks[selectedTask].disabled\r\n                            : null\r\n                        }\r\n                        onClick={onClickTaskChange}\r\n                      >\r\n                        EDIT\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        className={cls.btn}\r\n                        onClick={\r\n                          tasks[selectedTask] && !tasks[selectedTask].isdone\r\n                            ? () => onClickTaskDone(tasks[selectedTask].id)\r\n                            : () => onClickTaskNotDone(tasks[selectedTask].id)\r\n                        }\r\n                      >\r\n                        {tasks[selectedTask]\r\n                          ? tasks[selectedTask].isdone\r\n                            ? \"Reopen\"\r\n                            : \"Done\"\r\n                          : \"Done\"}\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        className={cls.btn}\r\n                        onClick={() =>\r\n                          onClickTaskDelete(tasks[selectedTask].id)\r\n                        }\r\n                      >\r\n                        DELETE\r\n                      </Button>\r\n                    </>\r\n                  ) : null}\r\n                </fieldset>\r\n              </form>\r\n            </Container>\r\n          </Container>\r\n        ) : null}\r\n        {formNewTask ? (\r\n          <PopupForm name=\"Add task\" placeholder=\"New task\" />\r\n        ) : null}\r\n        {formChangeTask ? (\r\n          <PopupForm name=\"Change task\" placeholder=\"\" />\r\n        ) : null}\r\n      </TodoListContext.Provider>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport cls from \"./manual.module.css\";\r\n\r\nexport const Manual = () => {\r\n  return (\r\n    <div className={cls.text}>\r\n      <p>\r\n        Когда человек сознательно или интуитивно выбирает себе в жизни какую-то\r\n        цель, жизненную задачу, он невольно дает себе оценку. По тому, ради чего\r\n        человек живет, можно судить и о его самооценке - низкой или высокой.\r\n        Если человек живет, чтобы приносить людям добро, облегчать их страдания,\r\n        давать людям радость, то он оценивает себя на уровне этой своей\r\n        человечности. Он ставит себе цель, достойную человека. Только такая цель\r\n        позволяет человеку прожить свою жизнь с достоинством и получить\r\n        настоящую радость. Да, радость! Подумайте: если человек ставит себе\r\n        задачей увеличивать в жизни добро, приносить людям счастье, какие\r\n        неудачи могут его постигнуть? Не тому помочь? Но много ли людей не\r\n        нуждаются в помощи? Если жить только для себя, своими мелкими заботами о\r\n        собственном благополучии, то от прожитого не останется и следа. Если же\r\n        жить для других, то другие сберегут то, чему служил, чему отдавал силы.\r\n        Можно по-разному определять цель своего существования, но цель должна\r\n        быть. Надо иметь и принципы в жизни. Одно правило в жизни должно быть у\r\n        каждого человека, в его цели жизни, в его принципах жизни, в его\r\n        поведении: надо прожить жизнь с достоинством, чтобы не стыдно было\r\n        вспоминать. Достоинство требует доброты, великодушия, умения не быть\r\n        эгоистом, быть правдивым, хорошим другом, находить радость в помощи\r\n        другим.\r\n      </p>\r\n      <p>\r\n        Когда человек сознательно или интуитивно выбирает себе в жизни какую-то\r\n        цель, жизненную задачу, он невольно дает себе оценку. По тому, ради чего\r\n        человек живет, можно судить и о его самооценке - низкой или высокой.\r\n        Если человек живет, чтобы приносить людям добро, облегчать их страдания,\r\n        давать людям радость, то он оценивает себя на уровне этой своей\r\n        человечности. Он ставит себе цель, достойную человека.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport cls from \"./Navbar.module.css\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  hide: {\r\n    display: \"none\"\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    marginLeft: -drawerWidth\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    }),\r\n    marginLeft: 0\r\n  }\r\n}));\r\n\r\nexport const Navbar = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        // style={{position: 'static'}}\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            МENU\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"ltr\" ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button>\r\n            <li>\r\n              <NavLink\r\n                className={cls.link}\r\n                exact\r\n                to=\"/todolist-material_ui/home\"\r\n                activeClassName={cls.active}\r\n              >\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n          </ListItem>\r\n          <ListItem button>\r\n            <li>\r\n              <NavLink\r\n                className={cls.link}\r\n                to=\"/todolist-material_ui/todolist\"\r\n                activeClassName={cls.active}\r\n              >\r\n                Make a list\r\n              </NavLink>\r\n            </li>\r\n          </ListItem>\r\n          <ListItem button>\r\n            <li>\r\n              <NavLink\r\n                className={cls.link}\r\n                to=\"/todolist-material_ui/manual\"\r\n                activeClassName={cls.active}\r\n              >\r\n                User's manual\r\n              </NavLink>\r\n            </li>\r\n          </ListItem>\r\n          <ListItem button>  \r\n            <li>\r\n              <NavLink\r\n                className={cls.link}\r\n                to=\"/todolist-material_ui/\"\r\n              >\r\n                Log out\r\n              </NavLink>\r\n            </li>\r\n          </ListItem>\r\n        </List>\r\n        <Divider />\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n","export const SHOW_ALERT = \"SHOW_ALERT\";\r\nexport const HIDE_ALERT = \"HIDE_ALERT\";\r\n\r\nexport const alertReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case SHOW_ALERT:\r\n      return {\r\n        ...state,\r\n        text: action.payload.text,\r\n        severity: action.payload.severity,\r\n        alertVisible: true\r\n      };\r\n    case HIDE_ALERT:\r\n      return {\r\n        ...state,\r\n        alertVisible: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from \"react\";\r\nimport { alertReducer, SHOW_ALERT, HIDE_ALERT } from \"./alertReducer\";\r\nimport { AlertContext } from \"./alertContext\";\r\n\r\nexport const AlertState = ({ children }) => {\r\n  const [state, dispatch] = useReducer(alertReducer, {\r\n    text: \"\",\r\n    severity: \"\",\r\n    alertVisible: false\r\n  });\r\n\r\n  const showAlert = (text, severity) => {\r\n    dispatch({ type: SHOW_ALERT, payload: { text, severity } });\r\n  };\r\n\r\n  const hideAlert = () => {\r\n    dispatch({ type: HIDE_ALERT });\r\n  };\r\n\r\n  return (\r\n    <AlertContext.Provider value={{ showAlert, hideAlert, alert: state }}>\r\n      {children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n","import React, { useReducer } from \"react\";\nimport { Fragment } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { StylesProvider } from \"@material-ui/core/styles\";\nimport Auth from \"./components/auth/Auth\";\nimport { AuthContext } from \"./context/auth/authContext\";\nimport authorizationReducer from \"./reducers/authorizationReducer\";\nimport { Home } from \"./pages/Home\";\nimport { TodoList } from \"./pages/TodoList\";\nimport { Manual } from \"./pages/Manual\";\nimport { Navbar } from \"./components/navbar/Navbar\";\nimport { AlertState } from \"./context/alert/alertState\";\n\nfunction App(props) {\n  const [state, dispatch] = useReducer(authorizationReducer, {\n    registrationForm: JSON.parse(\n      sessionStorage.getItem(\"registrationForm\")\n    ) || {\n      login: {\n        draft: \"\",\n        value: \"\",\n      },\n      password1: {\n        draft: \"\",\n        value: \"\",\n      },\n      password2: {\n        draft: \"\",\n        value: \"\",\n      },\n      email: {\n        draft: \"\",\n        value: \"\",\n      },\n    },\n    authorizationForm: {\n      login: {\n        draft: \"\",\n      },\n      password: {\n        draft: \"\",\n      },\n    },\n    isValid: false,\n    isRegistration: false,\n  });\n\n  return (\n    <Fragment>\n      <CssBaseline />\n      <StylesProvider injectFirst>\n        <div>\n          <AlertState>\n            <AuthContext.Provider value={{ state, dispatch }}>\n              {!state.isValid ? <Route path=\"/todolist-material_ui/\" component={Auth} /> : null}\n            </AuthContext.Provider>\n            {state.isValid ? (\n              <>\n                <Navbar/>\n                <Switch>\n                  <Route path=\"/todolist-material_ui/home\" component={Home} />\n                  <Route path=\"/todolist-material_ui/todolist\" component={TodoList} />\n                  <Route path=\"/todolist-material_ui/manual\" component={Manual} />\n                </Switch>\n              </>\n            ) : null}\n          </AlertState>\n        </div>\n      </StylesProvider>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"todolist_container__2ZqNF\",\"wrap\":\"todolist_wrap__2Z-Tw\",\"results\":\"todolist_results__2V3SV\",\"done\":\"todolist_done__1l3XQ\",\"field\":\"todolist_field__3EOFt\",\"btn\":\"todolist_btn__21sAH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navbar_link__1SpIh\",\"active\":\"Navbar_active__2fLC_\",\"item\":\"Navbar_item__36uzT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PopupForm_container__1HJ37\",\"wrap\":\"PopupForm_wrap__3xA9u\",\"color\":\"PopupForm_color__1sEdU\",\"btn\":\"PopupForm_btn__YsdQw\",\"cancel\":\"PopupForm_cancel__1P3yM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapButtons\":\"Auth_wrapButtons__bz4Yb\",\"btnSignUp\":\"Auth_btnSignUp__1C0Te\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapForm\":\"form_wrapForm__3855-\",\"signUp\":\"form_signUp__10GKT\",\"area\":\"form_area__fDJp9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapAlert\":\"Alert_wrapAlert__31OHH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Home_text__3CXOY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"manual_text__1kmcs\"};"],"sourceRoot":""}